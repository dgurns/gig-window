daemon off;

error_log /dev/stdout info;

events {
  worker_connections 1024;
}

rtmp {
  server {
    listen ${RTMP_PORT};
    chunk_size 4000;

    application stream {
      live on;

      # The following notifications receive all
      # the session variables as well as
      # particular call arguments in HTTP POST
      # request

      # Make HTTP request & use HTTP retcode
      # to decide whether to allow publishing
      # from this connection or not
      on_publish http://localhost:8080/publish;

      # Same with playing
      on_play http://localhost:8080/play;

      # Publish/play end (repeats on disconnect)
      on_done http://localhost:8080/done;

      # Async notify about an flv recorded
      on_record_done http://localhost:8080/record_done;
    }
  }
}

http {
  access_log /dev/stdout combined;

  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;

  server {
    listen ${HTTP_PORT};

    # Uncomment these lines to enable SSL.
    # Update the ssl paths with your own certificate and private key.
    # listen 443 ssl;
    # ssl_certificate     /opt/certs/example.com.crt;
    # ssl_certificate_key /opt/certs/example.com.key;

    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet static/stat.xsl;
    }

    location /static {
      alias /www/static;
    }

    location = /crossdomain.xml {
      root /www/static;
      default_type text/xml;
      expires 24h;
    }
  }
}